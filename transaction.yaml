openapi: '3.0.0'
info:
  description: " Yuvajunction - transaction service
  
  
  
  That API use:
  
  
 
  
  **ChangeLog**
  
  |Version|Release|Delivery Sprint|Impacts                    |Type    |Note|
  
  |-----|---------|----|--------------------------------------|-----------|-|
  
  |1.0.0|   |-   |**Initial version**                   |           | | 
    
  
  
  "
  version: 1.0.0
  title: Transaction API
 
 
    
paths:
  /transaction/{transactionId}:
    get:
      tags:
      - Get Transaction details
      summary: "The service get a transaction detail from the database."
      description: This service is called when a transaction detail is to be retrived by its id.
      operationId: "get"
      parameters:
        - in: path
          required: true
          name: transactionId
          schema:
            type: string
            
              
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        '400':
          description: Business Exception
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ExecuteException'
        '500':
          description: Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ExecuteException'       
      security:
      - basicAuth: []
      
  /transaction:
    post:
      tags:
      - Create Transaction
      summary: "The service creates a new transaction  in the database."
      description: This service is called when a new transaction is crated. It will take the relevant transaction infrmation as input and create a new item in transaction table.
      operationId: "create"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatetransactionRequest' 
              
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
        '400':
          description: Business Exception
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ExecuteException'
        '500':
          description: Server Error
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ExecuteException'       
      security:
      - basicAuth: []
components:  
  schemas:
    TransactionResponse:
      allOf:
        - type: object
          properties:
            id: 
              type: string
            status:
              type: string
              enum: [COMPLETE,FAILED,PENDING]   
            transactionDate:
              type: date
            senderId:
              type: string
            receiverId:
              type: string
            amount:
              type: number
              format: double    
                   
     
          
    CreatetransactionRequest:
      allOf:
        - type: object
          properties:
            senderId:
              type: string
            receiverId:
              type: string
            amount:
              type: number
              format: double  
            
    
    ExecuteException:
      type: object
      properties:
        code:
          type: string
          description: The code identifying the type of error
        message:
          type: string
          description: The error message
